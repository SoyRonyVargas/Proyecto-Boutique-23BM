// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBoutique23BM.Clases;

#nullable disable

namespace Proyecto23BMBoutique2.Migrations
{
    [DbContext(typeof(RestauranteDataContext))]
    partial class RestauranteDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Proyecto23BMBoutique2.Clases.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Camisetas"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Pantalones"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Vestidos"
                        });
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.Clases.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Root"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Gerente"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.entradas.entities.Entrada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Productoid")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorFK")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioFK")
                        .HasColumnType("int");

                    b.Property<double>("importe")
                        .HasColumnType("double");

                    b.Property<double>("iva")
                        .HasColumnType("double");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.HasIndex("ProveedorFK");

                    b.HasIndex("UsuarioFK");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.entradas.entities.Entrada_Has_Producto", b =>
                {
                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<double>("importe")
                        .HasColumnType("double");

                    b.Property<double>("iva")
                        .HasColumnType("double");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.HasKey("EntradaId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Entrada_Has_Producto");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.proveedores.entities.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("correo_electronico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("empresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            contacto = "Contacto",
                            correo_electronico = "oscar@empresa1.com",
                            direccion = "Dirección1",
                            empresa = "Empresa1",
                            nombre = "Oscar",
                            status = 1,
                            telefono = "123456789"
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            contacto = "Contacto",
                            correo_electronico = "lucia@empresa2.com",
                            direccion = "Dirección2",
                            empresa = "Empresa2",
                            nombre = "Lucía",
                            status = 1,
                            telefono = "987654321"
                        },
                        new
                        {
                            id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            contacto = "Contacto",
                            correo_electronico = "carlos@empresa3.com",
                            direccion = "Dirección3",
                            empresa = "Empresa3",
                            nombre = "Carlos",
                            status = 1,
                            telefono = "456789123"
                        },
                        new
                        {
                            id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            contacto = "Contacto",
                            correo_electronico = "laura@empresa4.com",
                            direccion = "Dirección4",
                            empresa = "Empresa4",
                            nombre = "Laura",
                            status = 1,
                            telefono = "789123456"
                        },
                        new
                        {
                            id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            contacto = "Contacto",
                            correo_electronico = "miguel@empresa5.com",
                            direccion = "Dirección5",
                            empresa = "Empresa5",
                            nombre = "Miguel",
                            status = 1,
                            telefono = "321654987"
                        });
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.ventas.entities.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VendedorFK")
                        .HasColumnType("int");

                    b.Property<double>("importe")
                        .HasColumnType("double");

                    b.Property<double>("iva")
                        .HasColumnType("double");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("VendedorFK");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.ventas.entities.VentaProducto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductoFK")
                        .HasColumnType("int");

                    b.Property<int>("VentaFK")
                        .HasColumnType("int");

                    b.Property<double>("cantidad")
                        .HasColumnType("double");

                    b.Property<double>("importe")
                        .HasColumnType("double");

                    b.Property<double>("iva")
                        .HasColumnType("double");

                    b.Property<double>("precio_pieza")
                        .HasColumnType("double");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("ProductoFK");

                    b.HasIndex("VentaFK");

                    b.ToTable("VentasProductos");
                });

            modelBuilder.Entity("ProyectoBoutique23BM.Clases.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("existencias")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("precio")
                        .HasColumnType("double");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CategoriaFK");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P001",
                            descripcion = "Camiseta de manga corta JOJI",
                            existencias = 0,
                            imagen = "https://img.elo7.com.br/product/zoom/31043A7/camiseta-algodao-pink-guy-bad-vibe-indie-retro-joji-filthy-guy.jpg",
                            precio = 199.99000000000001,
                            status = 1
                        },
                        new
                        {
                            id = 2,
                            CategoriaFK = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P002",
                            descripcion = "Pantalones De Lápiz",
                            existencias = 0,
                            imagen = "https://m.media-amazon.com/images/I/71ELCXal0nS._AC_UF894,1000_QL80_.jpg",
                            precio = 299.99000000000001,
                            status = 1
                        },
                        new
                        {
                            id = 3,
                            CategoriaFK = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P003",
                            descripcion = "Pantalones joggers",
                            existencias = 0,
                            imagen = "https://down-mx.img.susercontent.com/file/68f810f3195cf9e17de5d5a8c9bc7db4",
                            precio = 299.99000000000001,
                            status = 1
                        },
                        new
                        {
                            id = 4,
                            CategoriaFK = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P003",
                            descripcion = "Lentes De Sol Blancas Estilo Hip-Hop",
                            existencias = 0,
                            imagen = "https://m.media-amazon.com/images/I/31hV8MpgCQL._AC_SY580_.jpg",
                            precio = 659.99000000000001,
                            status = 1
                        },
                        new
                        {
                            id = 5,
                            CategoriaFK = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P003",
                            descripcion = "Vestido De Terciopelo Para Mujer",
                            existencias = 0,
                            imagen = "https://m.media-amazon.com/images/I/71FA4gYrZJL._AC_SX342_.jpg",
                            precio = 1599.99,
                            status = 1
                        },
                        new
                        {
                            id = 6,
                            CategoriaFK = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P003",
                            descripcion = " Vestido de Novia Vestido de Novia Top de Encaje Vestido de Dama de Honor de la Boda Vestido de Fiesta de graduación Largo Elegante Regalo Nupcial",
                            existencias = 0,
                            imagen = "https://m.media-amazon.com/images/I/716ZepRUgSL._AC_UF894,1000_QL80_.jpg",
                            precio = 6999.9899999999998,
                            status = 1
                        },
                        new
                        {
                            id = 7,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P005",
                            descripcion = "Tenis yeezy",
                            existencias = 0,
                            imagen = "https://m.media-amazon.com/images/I/711gDC-38fL._AC_UY1000_.jpg",
                            precio = 1799.99,
                            status = 1
                        },
                        new
                        {
                            id = 8,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P005",
                            descripcion = "Boxers calvin klein",
                            existencias = 0,
                            imagen = "https://calvinargentina.vteximg.com.br/arquivos/ids/181157-470-620/NB2614-001_1.jpg?v=638114762715830000",
                            precio = 659.88999999999999,
                            status = 1
                        },
                        new
                        {
                            id = 9,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P005",
                            descripcion = "Zapatos De Payaso Profesional Multicolor Tamaño Mediano",
                            existencias = 0,
                            imagen = "https://http2.mlstatic.com/D_NQ_NP_922495-MLM31368805414_072019-W.jpg",
                            precio = 1595.99,
                            status = 1
                        },
                        new
                        {
                            id = 10,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P005",
                            descripcion = "Nariz de payaso",
                            existencias = 0,
                            imagen = "https://media.istockphoto.com/id/851634552/es/foto/nariz-de-payaso-sobre-fondo-blanco.jpg?s=612x612&w=0&k=20&c=YOdX2gaDFUFz6jull7GPk6MblYu2h2Ad-GJHquSPbZQ=",
                            precio = 128.0,
                            status = 1
                        },
                        new
                        {
                            id = 11,
                            CategoriaFK = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            codigo = "P005",
                            descripcion = "Traje de payaso",
                            existencias = 0,
                            imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcToGkBvYCLMI_5CjDQxby8mZ80ma_s4Y7xzNQ&usqp=CAU",
                            precio = 999.0,
                            status = 1
                        });
                });

            modelBuilder.Entity("ProyectoBoutique23BM.Clases.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RolFK")
                        .HasColumnType("int");

                    b.Property<string>("apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("RolFK");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Imagen = "123123123123123123123",
                            RolFK = 1,
                            apellidos = "Aguilar",
                            correo = "martin@gmail.com",
                            nombre = "Martin",
                            nombreUsuario = "martin",
                            password = "1234"
                        },
                        new
                        {
                            id = 2,
                            Imagen = "123123123123123123123",
                            RolFK = 2,
                            apellidos = "Robles",
                            correo = "edison@gmail.com",
                            nombre = "Edison",
                            nombreUsuario = "edison",
                            password = "1234"
                        },
                        new
                        {
                            id = 3,
                            Imagen = "123123123123123123123",
                            RolFK = 3,
                            apellidos = "Mendez",
                            correo = "angel@gmail.com",
                            nombre = "Angel",
                            nombreUsuario = "angel",
                            password = "1234"
                        });
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.entradas.entities.Entrada", b =>
                {
                    b.HasOne("ProyectoBoutique23BM.Clases.Producto", null)
                        .WithMany("Entradas")
                        .HasForeignKey("Productoid");

                    b.HasOne("Proyecto23BMBoutique2.proveedores.entities.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBoutique23BM.Clases.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.entradas.entities.Entrada_Has_Producto", b =>
                {
                    b.HasOne("Proyecto23BMBoutique2.entradas.entities.Entrada", "Entrada")
                        .WithMany("EntradaProductos")
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBoutique23BM.Clases.Producto", "Producto")
                        .WithMany("EntradaProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.ventas.entities.Venta", b =>
                {
                    b.HasOne("ProyectoBoutique23BM.Clases.Usuario", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.ventas.entities.VentaProducto", b =>
                {
                    b.HasOne("ProyectoBoutique23BM.Clases.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto23BMBoutique2.ventas.entities.Venta", "Venta")
                        .WithMany("Productos")
                        .HasForeignKey("VentaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ProyectoBoutique23BM.Clases.Producto", b =>
                {
                    b.HasOne("Proyecto23BMBoutique2.Clases.Categoria", "CatActual")
                        .WithMany()
                        .HasForeignKey("CategoriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatActual");
                });

            modelBuilder.Entity("ProyectoBoutique23BM.Clases.Usuario", b =>
                {
                    b.HasOne("Proyecto23BMBoutique2.Clases.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.entradas.entities.Entrada", b =>
                {
                    b.Navigation("EntradaProductos");
                });

            modelBuilder.Entity("Proyecto23BMBoutique2.ventas.entities.Venta", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ProyectoBoutique23BM.Clases.Producto", b =>
                {
                    b.Navigation("EntradaProductos");

                    b.Navigation("Entradas");
                });
#pragma warning restore 612, 618
        }
    }
}
