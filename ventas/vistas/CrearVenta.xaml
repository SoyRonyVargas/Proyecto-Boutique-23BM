<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Proyecto23BMBoutique2.ventas.vistas"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vistas="clr-namespace:Proyecto23BMBoutique2.usuario.vistas" xmlns:ventas="clr-namespace:Proyecto23BMBoutique2.ventas" x:Class="Proyecto23BMBoutique2.ventas.vistas.CrearVenta"
             mc:Ignorable="d" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="545" d:DesignWidth="950">

    <UserControl.Resources>

        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Yellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="Margin" Value="0,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
            <Setter Property="Margin" Value="0,8" />
        </Style>

        <Style TargetType="{x:Type Viewbox}">
            <Setter Property="Height" Value="18" />
            <Setter Property="Margin" Value="0,0,8,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="18" />
        </Style>

    </UserControl.Resources>

    <Grid Background="#DDDDDD">
        <Grid Width="902" HorizontalAlignment="Right" >
            <Grid HorizontalAlignment="Left" Width="704" Background="#dddddd">
                <Grid Background="#DDDDDD" Margin="-5,0,0,0">
                    <TextBox x:Name="input_nombre_producto" HorizontalAlignment="Left" Margin="37,64,0,0"  VerticalAlignment="Top" Width="146" Height="36"/>
                    <Label Content="Nombre" HorizontalAlignment="Left" Margin="37,36,0,0" VerticalAlignment="Top" />
                    <TextBox x:Name="input_codigo_producto" HorizontalAlignment="Left" Margin="37,154,0,0"  VerticalAlignment="Top" Width="146" Height="36"/>
                    <Label Content="Codigo" HorizontalAlignment="Left" Margin="37,125,0,0" VerticalAlignment="Top" />
                    <Button x:Name="btnBuscarPorNombre" Content="Buscar" HorizontalAlignment="Left" Margin="199,71,0,0" VerticalAlignment="Top" Background="#FF0667B5" Height="29" Click="Button_Click_1"/>
                    <ComboBox x:Name="comboProductos" HorizontalAlignment="Left" Margin="294,64,0,0" VerticalAlignment="Top" Width="114" Height="36">
                        <ComboBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="ComboBoxItem" />
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <Button Content="Agregar" HorizontalAlignment="Left" Margin="424,71,0,0" VerticalAlignment="Top" Background="#FF0667B5" Height="29" Click="Button_Click_2"/>
                    <Button Content="Buscar" HorizontalAlignment="Left" Margin="199,161,0,0" VerticalAlignment="Top" Background="#FF0667B5" Height="29" Click="Button_Click_3"/>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="200"/>
                            <RowDefinition Height="300"/>
                            <!-- Puedes ajustar la altura según tus necesidades -->
                            <RowDefinition Height="*"/>
                            <!-- Puedes ajustar la altura según tus necesidades -->
                        </Grid.RowDefinitions>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1" >
                            <DataGrid x:Name="gridProductosSeleccionados" ColumnWidth="*" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" Background="{x:Null}"  IsSynchronizedWithCurrentItem="True" Margin="36,0,10,0" Height="NaN" Width="NaN" RenderTransformOrigin="0.5,0.5">

                                <!--<DataGrid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleY="0.217"/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="-0.996"/>
                                    </TransformGroup>
                                </DataGrid.RenderTransform>-->

                                <DataGrid.Columns>

                                    <DataGridTextColumn Width="100" Header="Producto" Binding="{Binding Producto.descripcion}" />

                                    <DataGridTemplateColumn Width="80" Header="Imagen">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <!-- Usamos un Image control para mostrar la imagen -->
                                                <Image Source="{Binding Producto.imagen}" Width="50" Height="50" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Width="70" Header="Precio" Binding="{Binding Producto.precio,StringFormat=\{0:C\}}" />

                                    <DataGridTemplateColumn Width="90" Header="Cantidad">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Loaded="CantidadTextBox_Loaded" x:Name="CantidadTextBox" Text="{Binding cantidad, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Width="80" Header="Importe" Binding="{Binding importe,StringFormat=\{0:C\}}" />

                                    <DataGridTextColumn Width="80" Header="IVA" Binding="{Binding iva,StringFormat=\{0:C\}}" />

                                    <DataGridTextColumn  Width="80" Header="Total" Binding="{Binding total,StringFormat=\{0:C\}}" />

                                    <DataGridTemplateColumn Width="60" Header="">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Click="EliminarButton_Click" BorderBrush="#a11616" Background="#a11616" Width="20" Height="20" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                                    <materialDesign:PackIcon Kind="Delete" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                </DataGrid.Columns>

                            </DataGrid>
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Width="200" Background="#FFFF" Height="545" HorizontalAlignment="Right">
                <Grid Height="35" VerticalAlignment="Top" Margin="20,40,20,0">
                    <Label FontWeight="SemiBold" HorizontalAlignment="left" Content="Importe" />
                    <Label x:Name="labelImporte" FontWeight="Bold" HorizontalAlignment="Right" Content="129.00" />
                    <Separator Height="30" VerticalAlignment="Top" Margin="0,20,0,0"/>
                </Grid>
                <Grid VerticalAlignment="Top" Height="35" Margin="20,80,20,0">
                    <Label FontWeight="SemiBold" HorizontalAlignment="left" Content="IVA" />
                    <Label x:Name="labelIVA" FontWeight="Bold" HorizontalAlignment="Right" Content="129.00" />
                    <Separator Height="30" VerticalAlignment="Top" Margin="0,20,0,0"/>
                </Grid>
                <Grid VerticalAlignment="Top" Height="35" Margin="20,120,20,0">
                    <Label FontWeight="SemiBold" HorizontalAlignment="left" Content="Total" />
                    <Label x:Name="labelTotal" FontWeight="Bold" HorizontalAlignment="Right" Content="129.00" />
                    <Separator Height="30" VerticalAlignment="Top" Margin="0,20,0,0"/>
                </Grid>
                <Button Click="handleGuardarVenta" BorderBrush="#FF1D5D9B" Background="#FF1D5D9B" Style="{StaticResource MaterialDesignRaisedAccentButton}" Margin="20,170,20,345">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <materialDesign:PackIcon Foreground="White" Kind="Payment" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <TextBlock Foreground="White" Text="Pagar" VerticalAlignment="Center" Margin="5 0 0 0" />
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
